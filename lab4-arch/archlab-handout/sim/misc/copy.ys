	.pos 0
	irmovq stack, %rsp
	call main
	halt

	.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
	
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

	
main:
	irmovq src, %rdi
	irmovq dest, %rsi
	irmovq $0x3, %rdx
	call copy_block
	ret


copy_block:
	xorq %rax, %rax				# result = 0
	irmovq $0x8, %rcx           # src 與 dest 的自增
	irmovq $0x1, %r8            # len 的自增
	jmp test                    # 判斷是否結束循環
loop:
	mrmovq (%rdi), %rbx         # val = *src
	addq %rcx, %rdi             # src++
	rmmovq %rbx, (%rsi)         # *dest = val
	addq %rcx, %rsi             # dest++
	xorq %rbx, %rax             # result ^= val
	subq %r8, %rdx              # len--
test:
	andq %rdx, %rdx             # len > 0?
	jg loop
end:
	ret


	.pos 0x200
stack:
